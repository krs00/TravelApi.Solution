// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelApi.Models;

#nullable disable

namespace TravelApi.Migrations
{
    [DbContext(typeof(TravelApiContext))]
    [Migration("20230606195542_RevertToInitial")]
    partial class RevertToInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TravelApi.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            DestinationId = 1,
                            Description = "Small town",
                            Location = "Eagleland",
                            Name = "Onett"
                        },
                        new
                        {
                            DestinationId = 2,
                            Description = "Big town",
                            Location = "Eagleland",
                            Name = "Twoson"
                        },
                        new
                        {
                            DestinationId = 3,
                            Description = "Quirky",
                            Location = "Dreamland",
                            Name = "Magicant"
                        },
                        new
                        {
                            DestinationId = 4,
                            Description = "Rural village",
                            Location = "Chommo",
                            Name = "Dalaam"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Comment = "Kind of boring",
                            Date = new DateTime(2023, 6, 6, 12, 55, 41, 710, DateTimeKind.Local).AddTicks(580),
                            DestinationId = 1,
                            Rating = 8
                        },
                        new
                        {
                            ReviewId = 2,
                            Comment = "cool place",
                            Date = new DateTime(2023, 6, 6, 12, 55, 41, 710, DateTimeKind.Local).AddTicks(620),
                            DestinationId = 2,
                            Rating = 5
                        },
                        new
                        {
                            ReviewId = 3,
                            Comment = "Weird",
                            Date = new DateTime(2023, 6, 6, 12, 55, 41, 710, DateTimeKind.Local).AddTicks(630),
                            DestinationId = 3,
                            Rating = 6
                        },
                        new
                        {
                            ReviewId = 4,
                            Comment = "good vibes",
                            Date = new DateTime(2023, 6, 6, 12, 55, 41, 710, DateTimeKind.Local).AddTicks(630),
                            DestinationId = 4,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.HasOne("TravelApi.Models.Destination", "Destination")
                        .WithMany("Reviews")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelApi.Models.Destination", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
